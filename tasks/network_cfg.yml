---
#This configuration file will verify that Network Manager and its components are configured and a logical
#network connection is created using the system's default network device. The file is seperated into two
#parts:  The first part is for Red Hat based systems and the Second is for Debian based systems. Please
#note that for Debian Based systems this file will establish Network Manager as the default service for
#managing network services (This is not standard for Debian systems but in a mixed environment of Debian
#and Red Hat based systems this will standardize the configuration of network services).  The NetworkManager.conf.j2
#file must be placed in the files directory as this configuration file.

#Configuration of Network Manager Componenets on Red Hat Based Systems
  - name: Verify NetworkManager libraries are installed
    yum:
      name: "{{ item }}"
      state: installed
    with_items:
      - NetworkManager-glib
    when: ansible_os_family == "RedHat"


#Configuration of Network Manager Components on Debian Based Systems
  - name: Verify network-manager is installed
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
      - network-manager
      - python-dbus
      - libnm-glib-dev
    when: ansible_os_family == "Debian"
  - name: Configure network-manager
    template: src=files/NetworkManager.conf.j2 dest=/etc/NetworkManager/NetworkManager.conf
    when: ansible_os_family == "Debian"
  - name: Start network-manager
    service:
      name: network-manager
      state: started
    when: ansible_os_family == "Debian"

#Configuration of Logical Network Connection on any platform running Network Manager
  - name: Configure Static IP for new Logical Connection
    nmcli:
      conn_name: "{{ new_net_connection_name }}"
      ifname: "{{ interface_name }}"
      type: "{{ new_net_connection_type }}"
      ip4: "{{ new_net_connection_ip }}{{ new_net_connection_cidr}}"
      gw4: "{{ new_net_connection_gw }}"
      state: present
  - name: Set DNS
    nmcli:
      conn_name: "{{ new_net_connection_name }}"
      type: "{{ new_net_connection_type }}"
      dns4: "{{ new_net_connection_dns }}"
      state: present

#This section is for starting up the connection
#Restart Network Interface on Red Hat Based systems
#  - name: Restart Redhat Network Interface
#    command: /usr/sbin/ifup ifcfg-"{{ new_net_connection_name}}"
#    when: ansible_os_family == "RedHat"

#Restart Network Interface on Debian Based systems
#  - name: Restart Debian Network Interface
#    command: nmcli connection up "{{ new_net_connection_name}}"
#    when: ansible_os_family == "Debian"
#    ignore_errors: true
